openapi: "3.0.0"
info:
  title: Simple API overview
  version: 2.0.0
paths:
  /users:
    post:
      operationId: user.create
      summary: Create an user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fname:
                  type: string
                  description: First name of the user
                lname:
                  type: string
                  description: Last name of the user
                email:
                  type: string
                  description: email of the user
      responses:
        '200':
          description: >-
            The user has been created
          content:
            application/json:
              schema:
                type: object
                items:
                  properties:
                    user_id:
                      type: string
                      description: Id of the user
                    fname:
                      type: string
                      description: First name of the user
                    lname:
                      type: string
                      description: Last name of the user
                    email:
                      type: string
                      description: email of the user
  /users/{user_id}:
    get:
      operationId: user.get_user
      summary: Get a particular user
      parameters:
        - name: user_id
          in: path
          description: 'Id of the user'
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: >-
            The user has been read
          content:
            application/json:
              schema:
                type: object
                items:
                  properties:
                    user_id:
                      type: string
                      description: Id of the image
                    fname:
                      type: string
                      description: first name of the user
                    lname:
                      type: string
                      description: last name of the user
                    images:
                      type: array
                      description: Array of the images
                      items:
                        properties:
                          image_id:
                            type: string
                            description: Id of the image
                          user_id:
                            type: string
                            description: Id of the image
                          image:
                            type: string
                            description: url of the image
                          timestamp:
                            type: string
                            description: Creation/Update timestamp of the image
                    timestamp:
                      type: string
                      description: Creation/Update timestamp of the image
      
  /images:
    get:
      operationId: image.read_images
      summary: Reading a list  of images
      responses:
        '200':
          description: >-
            The images have been read
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    image_id:
                      type: string
                      description: Id of the image
                    user_id:
                      type: string
                      description: Id of the image
                    image:
                      type: string
                      description: url of the image
                    timestamp:
                      type: string
                      description: Creation/Update timestamp of the image
   
  /images/upload/{user_id}:
    post:
      operationId: image.upload
      summary: Uploading a list  of images
      parameters:
        - name: user_id
          in: path
          description: 'Id of the user'
          required: true
          example: 1
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                filename:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '200':
          description: >-
            The images have been uploaded
          content:
            application/json:
              schema:
                type: integer
        '404':
          description: >-
            The set of images cant be uploaded 
          content:
            application/json:
              schema:
                type: integer  

  /users/{user_id}/images/{image_id}:
    post:
      operationId: image.download
      summary: Downloading an image
      parameters:
        - name: image_id
          in: path
          description: 'Id of the image'
          required: true
          example: 1
          schema:
            type: integer
        - name: user_id
          in: path
          description: 'Id of the user'
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: >-
            The images have been read
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    image_id:
                      type: string
                      description: Id of the image
                    user_id:
                      type: string
                      description: Id of the user
                    image:
                      type: string
                      description: url of the image
                    timestamp:
                      type: string
                      description: Creation/Update timestamp of the image
        '404':
          description: >-
            The set of images cant be downloaded
          content:
            application/json:
              schema:
                type: integer
    delete:
      operationId: image.delete_image
      summary: Delete an image
      description: Delete an image
      parameters:
        - name: image_id
          in: path
          description: 'Id of the image'
          required: true
          example: 1
          schema:
            type: integer
        - name: user_id
          in: path
          description: 'Id of the user'
          required: true
          example: 1
          schema:
            type: integer
      responses:
        200:
          description: Successfully deleted an image
        
